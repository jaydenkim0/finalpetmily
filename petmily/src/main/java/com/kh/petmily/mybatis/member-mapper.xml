<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	namespace : 영역을 부르는 별칭
	parameterType : 이 명령을 실행하기 위해 필요한 데이터의 형태
	resultType : 기대되는 결과물의 형태(목록이든 아니든 dto 형태로 표기)
	
	태그때문에 못쓰게 되는 기호들은 다음의 영역으로 해결이 가능

	<![CDATA[
		SQL 구문
	]]>
	
	형태에 따라 파라미터를 다르게 설정할 수 있다
	- # 은 형태를 추론하여 자동으로 따옴표 설정 및 인코딩 처리를 수행
	- $ 는 값을 있는 그대로 출력하는 명령이므로 주로 "항목"에 사용
		- $ 는 SQL Injection 이라는 해킹공격에 매우 취약하므로 사용에 주의 
 -->

<mapper namespace="member" >
	
		<!-- 회원가입 -->
		<insert id="regist" parameterType="memberDto">
			insert into member values(
			#{id},
			#{pw},
			#{name},
			#{nick},
			#{email},
			#{phone},
			#{post},
			#{basic_addr},
			#{extra_addr},
			0,
			'member',
			#{pets},
			sysdate,
			sysdate,
			'true',
			'true'			
			)
		</insert>
	
	<select id = "login" parameterType="memberDto" resultType="memberDto">
		select * from member where id=#{id} and pw=#{pw}
	</select>
	
	<!-- 내정보조회 -->
	<select id="mylist" parameterType="String"  resultType="memberDto">
		select * from member where id=#{id}
	</select>
	
	<!-- 반려동물조회 -->
	<select id="mylistpet" parameterType="String" resultType="petDto">
		select * from pet where member_id=#{id}
	</select>
	
	<!-- 최종로그인 일시 업데이트 -->
	<update id="updatelastlogin" parameterType="String" >
		update member set lastlogin=sysdate where id=#{id}
	</update>
	
	<!-- 아이디찾기 -->
	<select id="findid" parameterType="memberDto" resultType="String">
		select id from member 
		where name= #{name} and email=#{email} and phone=#{phone}
	</select>

	<!--  비밀번호 변경 -->
	<update id="pwchange" parameterType="memberDto">
		update member set pw = #{pw} where email = #{email}
	</update>
	
	<!-- 펫등록 -->
	<insert id="pet_regist" parameterType="petDto">
		insert into pet values(pet_no_seq.nextval,#{member_id},#{name},#{age},#{type},#{ect})
	</insert>
	
</mapper>





