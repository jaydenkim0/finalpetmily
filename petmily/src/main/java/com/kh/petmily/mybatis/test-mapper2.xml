<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	namespace : 영역을 부르는 별칭
	parameterType : 이 명령을 실행하기 위해 필요한 데이터의 형태
	resultType : 기대되는 결과물의 형태(목록이든 아니든 dto 형태로 표기)
	
	태그때문에 못쓰게 되는 기호들은 다음의 영역으로 해결이 가능

	<![CDATA[
		SQL 구문
	]]>
	
	형태에 따라 파라미터를 다르게 설정할 수 있다
	- # 은 형태를 추론하여 자동으로 따옴표 설정 및 인코딩 처리를 수행
	- $ 는 값을 있는 그대로 출력하는 명령이므로 주로 "항목"에 사용
		- $ 는 SQL Injection 이라는 해킹공격에 매우 취약하므로 사용에 주의 
 -->

<mapper namespace="test">

	<!-- 
		펫시터별 지역정보까지 몽땅 불러오는 구문
		
		구문 2개(select)와 결과의 형태(resultMap)를 알려줘야함 
	-->
	
	<resultMap type="com.kh.petmily.test.PetSitter" id="sitter">
		<!-- column : DB항목명 , property : 자바 변수명 -->
		<result column="pet_sitter_no" property="pet_sitter_no"/>
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		
		<collection column="pet_sitter_no" javaType="java.util.List" ofType="com.kh.petmily.test.Location" property="list" select="getLocationList"></collection>
	</resultMap>
	
	<select id="getSitterList" resultMap="sitter" parameterType="map">
		select distinct petsitter.* from petsitter inner join (
			select * from location 
			<if test="city != ''  and area != ''">
			where city=#{city} and area=#{area}
			</if>
		)L on petsitter.pet_sitter_no = L.location_sitter_no
	</select>
	
	<select id="getLocationList" resultType="com.kh.petmily.test.Location" parameterType="int">
		select * from location where location_sitter_no = #{location_sitter_no}
	</select>


	<!-- 펫시터 불러오기 : 회원이 미리지정한 서비스 지역을 미리 검색해서 내보내주기 -->
	<select id="petsitter">
	
	</select>
</mapper>


















