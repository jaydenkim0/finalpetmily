<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="qna">
	<!-- CRUD -->
	<!-- 게시글 작성 -->
	<insert id="qnainsert" parameterType="QnaVO">
		insert into qna (
		qna_no,
		qna_writer,
		qna_title,
		qna_head,
		wdate,
		superno,
		groupno,
		depth,
		qna_content
		)
		values (
		#{qna_no},
		#{qna_writer},
		#{qna_title},
		#{qna_head},
		sysdate,
		#{superno},
		#{groupno},
		#{depth},
		#{qna_content}
		)
	</insert>

	<!-- 게시글 번호 받아오기 -->
	<select id="getSequence" resultType="int">
		select qna_no_seq.nextval
		from dual
	</select>
		

	<!-- 이미지 등록 -->
	<insert id="qnafile" parameterType="qnafileDto">
		insert into qna_file values(
		qna_file_no_seq.nextval,
		#{qna_qna_no},
		#{uploadname},
		#{savename},
		#{filetype},
		#{filesize}
		)
	</insert>

	<!-- 등록된 이미지 불러오기 -->
	<!-- 등록된 이미지가 몇개인지 가져오기 -->
	<select id="qnaImageList" parameterType="int"
		resultType="qnafileDto">
		select*from qna_file where qna_qna_no = #{qna_no}
	</select>

	<!-- 등록된 이미지 한장씩 불러오기 -->
	<select id="fileview" parameterType="int"
		resultType="qnafileDto">
		select*from qna_file where qna_file_no= #{qna_file_no}
	</select>

	<!-- 댓글 등록 -->
	<insert id="writeReply" parameterType="QnaReplyVO">
		insert into qna_reply(
		reply_no,
		origin,
		reply_writer,
		content,
		wdate
		)
		values(
		reply_no_seq.nextval,
		#{origin},
		#{reply_writer},
		#{content},
		sysdate
		)
	</insert>

	<!-- 댓글 조회 -->
	<select id="readReply" resultType="QnaReplyVO">
		select
		reply_no,
		reply_writer,
		content,
		wdate
		from qna_reply where origin = #{origin}
	</select>

	<!-- 댓글 수정 -->
	<update id="replyUpdate" parameterType="QnaReplyVO">
		update qna_reply set
		content =#{content}
		where reply_no = #{reply_no}
	</update>

	<!-- 댓글 삭제 -->
	<delete id="replyDelete">
		delete from qna_reply where reply_no = #{reply_no}
	</delete>

	<!-- 게시글 검색 목록 조회 -->
	<select id="qnalistAll" parameterType="map" resultType="QnaVO">
	select*from (
		select rownum as rn, A.* from(
			select
				qna_no, qna_writer, qna_title, qna_head, qna_content, wdate,groupno, superno,
				depth, count(reply_no) replycount
			from
				(
					select
						Q.qna_no, Q.qna_writer, Q.qna_title, Q.qna_head, Q.qna_content,
						Q.wdate, Q.groupno, Q.superno, Q.depth, QR.reply_no
					from qna Q
					left outer join qna_reply QR on Q.qna_no = QR.origin
					connect by prior qna_no = superno
					start with superno=0
					order siblings by groupno desc, qna_no desc, wdate desc
				)
<!-- 	from Qna -->
			where
				${type} like '%'||#{keyword}||'%'
			group by 
			    qna_no, qna_writer, qna_title, qna_head, qna_content, wdate,
			    groupno, superno, depth
		) A
	)
	where rn between #{start} and #{finish}
</select>

	<!-- 게시글 목록 -->
	<select id="getList" resultType="QnaVO" parameterType="map">
		select*from (
			select rownum as rn, A.* from(
				select
					qna_no, qna_writer, qna_title, qna_head, qna_content, wdate,groupno,
					superno, depth
					, count(reply_no) replycount
				from
					(
					select
						Q.qna_no,
						Q.qna_writer, Q.qna_title, Q.qna_head, Q.qna_content,
						Q.wdate,
						Q.groupno, Q.superno, Q.depth, QR.reply_no
					from qna Q
					left outer join
						qna_reply QR on Q.qna_no = QR.origin
					connect by prior qna_no = superno
					start with superno=0
					order siblings by groupno desc, qna_no desc, wdate desc
					)
				group by
					qna_no, qna_writer, qna_title, qna_head, qna_content, wdate,
					groupno, superno, depth
				) A
			) where rn
		between #{start} and #{finish}
	</select>


	<!-- 게시글 레코드 갯수 조회 -->
	<select id="getCount" resultType="int">
		select count(*) from Qna
	</select>

	<!-- 게시글 상세보기 조회 -->
	<select id="qnaview" resultType="QnaVO">
		select*from Qna where qna_no=
		#{qna_no}
	</select>

	<!-- 게시글 수정 -->
	<update id="qnaupdate" parameterType="QnaVO">
		update 
			Qna 
		set
			qna_title = #{qna_title},
			qna_head = #{qna_head},
			qna_content = #{qna_content}
			where qna_no = #{qna_no}
	</update>
	
	<!-- 댓글 수 갱신 -->
	<update id="replyCal" parameterType="QnaVO">
		update 
			qna 
		set 
			replycount = 
				(select count(*) from qna_reply where origin = ?) 
		where qna_no=?
	</update>

	<!-- 게시글 삭제 -->
	<delete id="qnadelete">
		delete from Qna where qna_no = #{qna_no}
	</delete>
	
	<!-- 회원 이미지 한개씩 불러오기 -->
	<select id="getmember_image" parameterType="String" resultType="memberImageDto">
		select 
			* 
		from
			member_image
		where 
			member_image_member_id=#{member_image_member_id}
	</select>	

</mapper>