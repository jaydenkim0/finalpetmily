<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	namespace : 영역을 부르는 별칭
	parameterType : 이 명령을 실행하기 위해 필요한 데이터의 형태
	resultType : 기대되는 결과물의 형태(목록이든 아니든 dto 형태로 표기)
	
	태그때문에 못쓰게 되는 기호들은 다음의 영역으로 해결이 가능

	<![CDATA[
		SQL 구문
	]]>
	
	형태에 따라 파라미터를 다르게 설정할 수 있다
	- # 은 형태를 추론하여 자동으로 따옴표 설정 및 인코딩 처리를 수행
	- $ 는 값을 있는 그대로 출력하는 명령이므로 주로 "항목"에 사용
		- $ 는 SQL Injection 이라는 해킹공격에 매우 취약하므로 사용에 주의 
 -->
 
<mapper namespace="care">

	<!-- 게시글 목록 -->
	<select id="list" resultType="careDto">
		select * from care_board order by wdate desc
	</select>
	
	
	<!-- 펫시터아이디로 펫시터번호 구하기 -->
	<select id="id_to_number" parameterType="String" resultType="int">
		select pet_sitter_no from pet_sitter where sitter_id=#{care_sitter_id}	
	</select>
	
	<!-- 돌봄방 생성 -->
	<insert id="write" parameterType="careDto">
		insert into care_board values(
			care_board_no_seq.nextval,
			#{care_member_id},
			#{care_sitter_no},
			#{care_board_content},
			#{care_pw},
			sysdate
		)
	</insert>
	
	<!-- 돌봄방 정보 불러오기 -->
	<select id="listcontent" parameterType="String" resultType="careDto">
		select * from care_board where care_board_no=#{care_board_no}
	</select>
	
	<!-- 펫시터번호로 펫시터아이디 구하기 -->
	<select id="number_to_id" parameterType="int" resultType="String">
		select sitter_id from pet_sitter where pet_sitter_no=#{care_sitter_no}
	</select>
	
	<!-- 돌봄 방 제목 변경 -->
	<update id="content_edit" parameterType="careDto">
		update 
			care_board 
		set 
			care_board_content=#{care_board_content} 
		where 
			care_board_no=#{care_board_no}
	</update>
	
	<!-- 돌봄 방 삭제 -->
	<delete id="delete" parameterType="String">
		delete from care_board where care_board_no=#{care_board_no}
	</delete>
	
	<!-- 돌봄 방 댓글 목록 -->
	<select id="replylist" resultType="careReplyDto" parameterType="String">
		select * from care_reply where care_reply_board_no=#{care_board_no} order by wdate desc
	</select>
	
	<!-- 돌봄 방 댓글 등록 -->
	<insert id="reply_regist" parameterType="careReplyDto">
		insert into care_reply values(
			care_reply_no_seq.nextval,
			#{care_reply_board_no },
			#{care_reply_content},
			sysdate,
			#{care_reply_writer}
		)
	</insert>
	
	<!-- 돌봄 방 댓글 수정 -->
	<update id="reply_change" parameterType="careReplyDto">
		update 
			care_reply 
		set 
			care_reply_content=#{care_reply_content} 
		where 
			care_reply_no=#{care_reply_no}
	</update>
	
	<!-- 돌봄 방 비밀번호 검사 -->
	<select id="care_board_password" resultType="int" parameterType="careDto">
		select 
			count(*) 
		from 
			care_board 
		where 
			care_board_no=#{care_board_no} and care_pw=#{care_pw}
	</select>
	
	<!-- 돌봄 방 댓글 삭제 -->
	<delete id="reply_delete" parameterType="careReplyDto">
		delete from care_reply where care_reply_no=#{care_reply_no}
	</delete>
	
	<!-- 파일업로드를 위한 댓글번호 찾기 -->
	<select id="find_care_reply_no" resultType="int">
		select care_reply_no from(
			select rownum as rn, E.* from (
    			select * from care_reply order by care_reply_no desc
			) E 
		)where rn=1		
	</select>
	
	<!-- 돌봄 이미지 등록 -->
	<insert id="care_image_regist" parameterType="careImageDto">
		insert into care_image values(
			care_image_no_seq.nextval,
			#{care_reply_no },
			#{savename},
			#{filetype},
			#{filesize},
			#{uploadname}
		)
	</insert>
	
	<!-- 돌봄댓글&이미지 목록 -->
	<select id="replyimagelist" parameterType="map" resultType="careReplyImageDto">
		select*from (
			select rownum as rn, A.* from(
				select
				 	I.care_image_no,
				 	R.care_reply_no,
				 	I.savename,
				 	I.filetype,
				 	I.filesize,
				 	I.uploadname,
				 	R.care_reply_board_no,
				 	R.care_reply_content,
				 	R.wdate,
				 	R.care_reply_writer
				from
				 	care_reply R
				 		left outer join care_image I
				 		on R.care_reply_no=I.care_reply_no
				where
					R.care_reply_board_no=#{care_board_no}
				order by R.wdate desc
			) A
		) where rn between #{start} and #{finish}
		
	</select>
	
	
	<!-- 해당 돌봄방의 돌봄 댓글 개수 구하기 -->
	<select id="getCount" resultType="int" parameterType="String"> 
		select count(*) from care_reply where care_reply_board_no=#{care_board_no}
	</select>
	
	<!-- 돌봄이미지 한개씩 불러오기 -->
	<select id="getImage" parameterType="int" resultType="careReplyImageDto">
		select 
			* 
		from 	
		 care_image
		 where 
		 	care_image_no = #{care_image_no}
	</select>
	
	<!-- 검색X돌봄방개수 -->
	<select id="getListCount" resultType="int">
		select count(*) from care_board
	</select>
	
	<!-- care_board_no 검색개수 -->
	<select id="getListCount_care_board_no" resultType="int" parameterType="String">
		select count(*) from care_board where care_board_no=#{keyword}
	</select>	
	
	<!-- care_member_id 검색개수 -->
	<select id="getListCount_care_member_id" resultType="int" parameterType="String">
		select count(*) from care_board where care_member_id like '%'||#{keyword}||'%'
	</select>
	
	<!-- care_sitter_no 검색개수 -->
	<select id="getListCount_care_sitter_no" resultType="int" parameterType="String">
		select 
			count(*) 
		from 
			care_board C
				 inner join pet_sitter P
				 on C.care_sitter_no=P.pet_sitter_no
		where 
			sitter_id='%'||#{keyword}||'%'
	</select>
	
	<!-- care_board_content 검색개수 -->
	<select id="getListCount_care_board_content" resultType="int" parameterType="String">
		select count(*) from care_board where care_board_content='%'||#{keyword}||'%'
	</select>

	<!-- 펫시터 번호로 펫시터 아이디 추출한 게시글 목록 -->
	<select id="sitter_id" resultType="carePetsitterDto" parameterType="map">
		select * from (
					select rownum as rn, A.* from(
				select
				 	care_board_no,
				 	care_member_id,
				 	sitter_id,
				 	care_board_content,
				 	care_pw,
				 	wdate					 
				from
				 care_board C
				 	inner join pet_sitter P
				 	on C.care_sitter_no=P.pet_sitter_no
				 order by wdate desc
			) A
		) where rn between #{start} and #{finish}
	</select>
	
	<!-- care_board_no 검색목록 -->
	<select id="pet_sitter_list_care_board_no" resultType="carePetsitterDto" parameterType="map">
		select*from (
			select rownum as rn, A.* from(
				select
				 	care_board_no,
				 	care_member_id,
				 	sitter_id,
				 	care_board_content,
				 	care_pw,
				 	wdate
				from
				 care_board C
				 	inner join pet_sitter P
				 	on C.care_sitter_no=P.pet_sitter_no
				 where care_board_no=#{keyword}
				order by wdate desc
			) A
		) where rn between #{start} and #{finish}
	</select>
	
	<!-- care_member_id 검색목록 -->
	<select id="pet_sitter_list_care_member_id" resultType="carePetsitterDto" parameterType="map">
		select*from (
			select rownum as rn, A.* from(
				select
				 	care_board_no,
				 	care_member_id,
				 	sitter_id,
				 	care_board_content,
				 	care_pw,
				 	wdate
				from
				 care_board C
				 	inner join pet_sitter P
				 	on C.care_sitter_no=P.pet_sitter_no
				 where care_member_id like '%'||#{keyword}||'%'
				order by wdate desc
			) A
		) where rn between #{start} and #{finish}
	</select>	
	
	<!-- care_sitter_no 검색목록 -->
	<select id="pet_sitter_list_care_sitter_no" resultType="carePetsitterDto" parameterType="map">
		select*from (
			select rownum as rn, A.* from(
				select
				 	care_board_no,
				 	care_member_id,
				 	sitter_id,
				 	care_board_content,
				 	care_pw,
				 	wdate
				from
				 care_board C
				 	inner join pet_sitter P
				 	on C.care_sitter_no=P.pet_sitter_no
				where P.sitter_id like '%'||#{keyword}||'%'
				order by wdate desc
			) A
		) where rn between #{start} and #{finish}
	</select>	
	
	<!-- care_board_content 검색목록 -->
	<select id="pet_sitter_list_care_board_content" resultType="carePetsitterDto" parameterType="map">
		select*from (
			select rownum as rn, A.* from(
				select
				 	care_board_no,
				 	care_member_id,
				 	sitter_id,
				 	care_board_content,
				 	care_pw,
				 	wdate
				from
				 care_board C
				 	inner join pet_sitter P
				 	on C.care_sitter_no=P.pet_sitter_no
				 where care_board_content like '%'||#{keyword}||'%'
				order by wdate desc
			) A
		) where rn between #{start} and #{finish}
	</select>
	
	<!-- 회원이미지 한개씩 불러오기 -->
	<select id="getmember_image" parameterType="String" resultType="memberImageDto">
		select 
			* 
		from
			member_image
		where 
			member_image_member_id=#{member_image_member_id}
	</select>	
	
	<!-- 펫시터 아이디 존재 검사 -->
	<select id="userIdCheck" parameterType="String" resultType="int">
		select count(*) from pet_sitter where sitter_id=#{user_id}
	</select>
	
	<!-- 펫시터 아이디 제공 -->
	<select id="offer_id" resultType="String">
		select sitter_id from pet_sitter
	</select>
	
</mapper>