<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	namespace : 영역을 부르는 별칭
	parameterType : 이 명령을 실행하기 위해 필요한 데이터의 형태
	resultType : 기대되는 결과물의 형태(목록이든 아니든 dto 형태로 표기)
	
	태그때문에 못쓰게 되는 기호들은 다음의 영역으로 해결이 가능

	<![CDATA[
		SQL 구문
	]]>
	
	형태에 따라 파라미터를 다르게 설정할 수 있다
	- # 은 형태를 추론하여 자동으로 따옴표 설정 및 인코딩 처리를 수행
	- $ 는 값을 있는 그대로 출력하는 명령이므로 주로 "항목"에 사용
		- $ 는 SQL Injection 이라는 해킹공격에 매우 취약하므로 사용에 주의 
 -->

<mapper namespace="petsitter">
<!-- 펫시터 회원 가입 -->
	<!-- 펫시터 기본 정보 -->
	<insert id="regist" parameterType="petsitterDto">
		insert into pet_sitter values(
		pet_sitter_no_seq.nextval,
		#{sitter_id},
		#{info},
		#{sitter_pets},
		#{care_condition},
		'정상',
		'true',
		#{sitter_matching_type},
		sysdate)
	</insert>
	<!-- 펫시터 스킬 -->
	<insert id="registSkills" parameterType="skillsDto">
		insert into skills values(#{skills_name},#{skills_sitter_no})
	</insert>
	<!-- 펫시터 돌봄 가능 동물 -->
	<insert id="registType" parameterType="carePetTypeDto">
		insert into care_pet_type values(#{care_name},#{care_sitter_no})
	</insert>
	<!-- 펫시터 돌봄 환경 -->
	<insert id="registCondition" parameterType="careConditionDto">
		insert into care_condition values(#{care_condition_name},#{condition_sitter_no})
	</insert>
</mapper>





